---
# tasks file for common

- name: install aws client
  become: yes
  become_user: django
  pip:
    name: awscli
    chdir: "{{ django_path }}"
    extra_args: --upgrade
    virtualenv: "{{ django_virtualenv }}"

- name: chmod aws client
  become: yes
  become_user: django
  file:
    path: "{{ django_virtualenv }}/bin/aws"
    state: file
    mode: "u+x"

- name: Add kubernetes repository
  become: yes
  yum_repository:
    name: Kubernetes
    description: Kubernetes YUM repo
    baseurl: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
    gpgkey:
      - "https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key"

- name: Enable system repo
  ansible.builtin.lineinfile:
    path: /etc/dnf/plugins/subscription-manager.conf
    regexp: '^disable_system_repos'
    line: disable_system_repos = 0

- name: install kubectl
  become: yes
  dnf:
    name:
      - kubectl
    state: latest
    enablerepo: Kubernetes

- name: Disable system repo
  ansible.builtin.lineinfile:
    path: /etc/dnf/plugins/subscription-manager.conf
    regexp: '^disable_system_repos'
    line: disable_system_repos = 1

- name: Download aws-iam-authenticator
  become: yes
  get_url:
    url: https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.1/2021-07-05/bin/linux/amd64/aws-iam-authenticator
    dest: "{{ django_virtualenv }}/bin/aws-iam-authenticator"
    checksum: "sha256:https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.1/2021-07-05/bin/linux/amd64/aws-iam-authenticator.sha256"
    owner: django
    group: django

- name: Make aws-iam-authenticator executable
  become: yes
  file:
    dest: "{{ django_virtualenv }}/bin/aws-iam-authenticator"
    mode: a+x

- name: Download argo
  become: yes
  get_url:
    url: https://github.com/argoproj/argo-workflows/releases/download/v3.5.7/argo-linux-amd64.gz
    dest: "{{ django_virtualenv }}/bin/argo.gz"
    owner: django
    group: django

- name: Extract argo
  become: yes
  ansible.builtin.command: gzip -d {{ django_virtualenv }}/bin/argo.gz

- name: Make argo executable
  become: yes
  file:
    dest: "{{ django_virtualenv }}/bin/argo"
    mode: a+x

- name: place awssync lockfile
  become: yes
  file:
    path: /var/lock/awssync
    state: touch
    mode: "u=r,g=r,o=r"

- name: create awssync lockfile on boot
  lineinfile:
    line: "f /var/lock/awssync 0444 root root -"
    state: present
    create: yes
    dest: /etc/tmpfiles.d/awssync.conf
  become: yes

- name: install crontab to sync with s3 bucket
  become: yes
  become_user: django
  cron:
    name: "sync with s3 bucket"
    minute: "*/5"
    job: "flock -n /var/lock/awssync -c 'source {{ django_virtualenv }}/bin/activate; aws s3 sync s3://{{ s3_bucket }}/data/dynamic /data/container/files --exact-time'"
    state: present

- name: Scan files after S3 sync
  become: yes
  become_user: django
  cron:
    name: "Scan files in S3 bucket"
    minute: "2-59/5"
    job: "source {{ django_virtualenv }}/bin/activate; cd {{ django_path }}; python manage.py scanbucket > /dev/null"
    state: present
