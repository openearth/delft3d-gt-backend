#!/usr/bin/env bash

SVN_USER={{ svn_accp_user }}
SVN_PASS={{ svn_accp_pass }}

cd /data
if [ ! -d /data/svn ]; then
    echo "Make checkout of subversion repository $REPOS_URL revision $SVN_REV"
    svn checkout $REPOS_URL --revision=$SVN_REV --username=$SVN_USER --password=$SVN_PASS --depth immediates --no-auth-cache svn
    svn update --revision=$SVN_REV --username=$SVN_USER --password=$SVN_PASS --set-depth infinity --no-auth-cache svn/scripts svn/template
    echo "I'm updated"

    echo "writing svn info to svn-info.txt file"
    svn info /data/svn > /data/output/svn-info.txt

    echo "writing linux distro information to lsb-release.txt file"
    cat /etc/lsb-release > /data/output/lsb-release.txt

    echo "writing pip freeze to pip-packages.txt file"
    pip freeze > /data/output/pip-freeze.txt
else
    echo "Use existing checkout of subversion repository"
fi

echo "start python script"
for script in $@; do

    echo "adding svn version to svn-info.txt file"
    echo "[ $(date) ] running $script revision $(svnversion /data/svn)" >> /data/output/svn-info.txt

    # Run scripts
    python $script

done

# by default we're not on amazon
# See, also for alternatives
# http://serverfault.com/questions/462903/how-to-know-if-a-machine-is-an-ec2-instance
EC2=0
if [ -f /sys/hypervisor/uuid ] && [ $(head -c 3 /sys/hypervisor/uuid) == "ec2" ]; then
    # introspect the machine
    EC2=1
fi


# Amazon specific code goes here
if [ "$EC2" == "1" ]
then
    if [ -z "$uuid" ]
    then
        echo "Failed to find $uuid on amazon, not sure where to put my files"
        echo "Make sure you set the uuid"
        exit 1
    fi
    # synchronize directory with on s3 (make sure you provision aws command lines (pip install aws-cli))
    # $folder starts with '/'
    aws s3 sync /data/output "s3://delft3d-gt$folder"
fi
