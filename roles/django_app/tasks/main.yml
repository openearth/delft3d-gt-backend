---
# tasks file for django_app

- name: Add django to redis group
  become: yes
  user:
    state: present
    name: "{{ app_user }}"
    groups: "{{ redis_user }}"
    append: yes

- name: add django static folder
  become: yes
  file:
    path: "{{ django_static }}"
    state: directory
    mode: 0755
    owner: django
    group: django

- name: check if django git exists
  stat:
    path: "{{ django_path }}//{{ django_app }}"
  register: django_exist

# Clean install -> create -> start celery
- name: add django project folder
  become: yes
  file:
    path: "{{ django_path }}"
    state: directory
    mode: 0755
    owner: django
    group: django
  when: not django_exist.stat.exists

- name: Setup the django git clean server
  become: yes
  become_user: django
  git:
    repo: "{{ django_git }}"
    version: "{{ git_branch }}"
    dest: "{{ django_path }}"
    accept_hostkey: yes
  when: not django_exist.stat.exists
  notify:
    - start celerybeat worker

# Folder exists + vagrant is false -> overwrite everything -> restart celery
- name: Setup the django git overwrite server
  become: yes
  become_user: django
  git:
    repo: "{{ django_git }}"
    version: "{{ git_branch }}"
    dest: "{{ django_path }}"
    accept_hostkey: yes
    force: yes
    update: yes
  when: django_exist.stat.exists and not vagrant
  notify:
    - restart celerybeat worker
    - restart celery worker

- name: install django
  become: yes
  become_user: django
  pip:
    requirements: "{{ requirements_file }}"
    extra_args: "--upgrade"
    virtualenv: "{{ django_virtualenv }}"
    virtualenv_python: python3.8
    virtualenv_command: /opt/rh/rh-python38/root/usr/local/bin/virtualenv

- name: create ui directory
  become: yes
  file:
    path: /opt/delft3d-gt/delft3d-gt-ui/dist
    state: directory
    mode: 0755
    owner: django
    group: django
  when: not vagrant

- name: download frontend
  get_url:
    url: "{{ frontend_url }}"
    dest: /tmp/delft3d-gt-ui.zip
  become: yes
  when: not vagrant

- name: unzip frontend
  unarchive:
    src: /tmp/delft3d-gt-ui.zip
    dest: /opt/delft3d-gt/delft3d-gt-ui
    owner: django
    group: django
    mode: 0755
    copy: no
  become: yes
  when: not vagrant

- name: delete frontend zip
  file:
    path: /tmp/delft3d-gt-ui.zip
    state: absent
  become: yes

# Folder exists + vagrant is true -> do nothing -> restart celery
- name: restart celery when git exists
  debug:
    msg: "restart celery worker"
  notify:
    - restart celery worker
    - restart celerybeat worker
  changed_when: true # force handler to run
  when: django_exist.stat.exists and vagrant

# End of conditionals

- name: Install custom delft3dcontainermanager provisionedsettings.py to project
  become: yes
  become_user: django
  template:
    src: ../templates/delft3dcontainermanager_settings.py.j2
    dest: "{{ django_path }}/delft3dcontainermanager/provisionedsettings.py"
    mode: 0664
  notify:
    - restart celery worker

- name: Set redis port correctly
  set_fact:
    redis_port: 6379
  when: vagrant

- name: Install custom provisionedsettings.py to project
  become: yes
  become_user: django
  template:
    src: ../templates/provisionedsettings.py.j2
    dest: "{{ django_path }}/{{ django_app }}/provisionedsettings.py"
    mode: 0664
  notify:
    - restart celerybeat worker

- name: Remove stale .pyc files
  become: yes
  shell: "find {{ django_path }} -name '*.pyc' -delete"

- name: Migrate db
  become: yes
  become_user: django
  shell: "source {{ django_virtualenv }}/bin/activate; python manage.py migrate --noinput chdir={{ django_path }}"

- name: Generate static dir
  become: yes
  become_user: django
  shell: "source {{ django_virtualenv }}/bin/activate; python manage.py collectstatic --noinput chdir={{ django_path }}"
  notify: restart apache

- name: Generate workflow dir
  become: yes
  become_user: django
  file:
    path: "{{ django_static }}/wf/workflow_templates"
    state: directory
    owner: django
    group: django
    mode: 0755

- name: Load initial Argo Workflow, see default_template.json
  become: yes
  become_user: django
  copy:
    src: argo_workflow.yaml
    dest: "{{ django_static }}/wf/workflow_templates/delft3dgt-main.yaml"
    owner: django
    group: django
    force: no # do not overwrite file, as the version model won't update
    mode: u=rw,g=r,o=r
  when: ('delft3dgt-local' in group_names) or ('delft3dgt-django' in group_names) or ('delft3dgt-dev' in group_names) or vagrant

- name: Load initial user, group and template data in Delft3D-GT db
  become: yes
  become_user: django
  shell: "source {{ django_virtualenv }}/bin/activate; python manage.py loaddata {{ item }}  chdir={{ django_path }}"
  with_items:
    - delft3dgtmain/fixtures/default_users_groups.json
    - delft3dworker/fixtures/default_template.json
  when: ('delft3dgt-local' in group_names) or ('delft3dgt-django' in group_names) or ('delft3dgt-dev' in group_names) or vagrant

# symlink the Thredds 404 page to a front-end styled version

- name: stat Thredds 404.jsp file
  stat:
    path: /var/lib/tomcat/webapps/thredds/WEB-INF/jsp/errorpages/404.jsp
  register: thredds_404_file

- name: backup original Thredds 404.jsp file (which is not a symlink)
  command: mv /var/lib/tomcat/webapps/thredds/WEB-INF/jsp/errorpages/404.jsp /var/lib/tomcat/webapps/thredds/WEB-INF/jsp/errorpages/_404.jsp
  become: yes
  when: thredds_404_file.stat.islnk is defined and not thredds_404_file.stat.islnk

- name: symlink Thredds 404.js to front-end styled version
  file:
    path: /var/lib/tomcat/webapps/thredds/WEB-INF/jsp/errorpages/404.jsp
    src: /opt/delft3d-gt/static/404.jsp
    state: link
    force: yes
  become: yes
  when: thredds_404_file.stat.islnk is defined and not thredds_404_file.stat.islnk

- name: make sure celery is started on boot
  become: yes
  service:
    name: celery
    state: started
    enabled: yes

- name: make sure celerybeat is started on boot
  become: yes
  service:
    name: celerybeat
    state: started
    enabled: yes
