# ---
# tasks file for postgresql

- name: install postgresql
  become: yes
  yum:  
    name:
      - postgresql
      - postgresql-server
      - postgresql-server-devel
      - python38-psycopg2  # for django
      - python3-psycopg2  # for ansible
    state: present

- name: initialize postgresql db
  become: yes
  command: postgresql-setup initdb
  notify: restart postgresql
  register: psql_result
  args:
    creates: /var/lib/pgsql/initdb_postgresql.log
  failed_when: >
    psql_result.rc != 0 and ("not empty" not in psql_result.stdout)
  changed_when: "psql_result.rc == 0"

- name: Install custom pg_hba config
  become: yes
  become_user: postgres
  template: src=../templates/pg_hba.conf.j2 dest=/var/lib/pgsql/data/pg_hba.conf owner=postgres group=postgres mode=0600

- name: Listen on all interfaces
  become: yes
  become_user: postgres
  lineinfile:
    path: /var/lib/pgsql/data/postgresql.conf
    regexp: "listen_addresses ="
    line: "listen_addresses = '*'"

- name: make sure postgres is started
  become: yes
  service:
    name: postgresql
    state: restarted
    enabled: yes

- name: create django db
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ databasename }}"

- name: add django user
  become: yes
  become_user: postgres
  postgresql_user:
    db: "{{ databasename }}"
    name: "{{ databaseuser }}"
    password: "{{ databasepass }}"

  # This is required for running tests
- name: change django dev user
  become: yes
  become_user: postgres
  postgresql_user:
    db: "{{ databasename }}"
    name: "{{ databaseuser }}"
    role_attr_flags: "CREATEDB"
  when: ('delft3dgt-dev' in group_names) or ('delft3dgt-test' in group_names) or vagrant

- name: grant ALL privs to django user on djangodb
  become: yes
  become_user: postgres
  postgresql_privs:
    database: "{{ databasename }}"
    state: present
    privs: ALL
    type: database
    objs: "{{ databasename }}"
    roles: "{{ databaseuser }}"
    grant_option: yes
